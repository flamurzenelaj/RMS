{"remainingRequest":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\src\\views\\food\\EditFood.vue?vue&type=style&index=0&id=2cbee00f&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\src\\views\\food\\EditFood.vue","mtime":1648063566358},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\css-loader\\dist\\cjs.js","mtime":1647724244576},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1647724258600},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\postcss-loader\\src\\index.js","mtime":1647724252550},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1647724256815},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647724242346},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\vue-loader\\lib\\index.js","mtime":1647724258599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZm9vZCB7DQogIC5jb250YWluZXIgew0KICAgIG1heC13aWR0aDogMTAwMHB4Ow0KICAgIHBhZGRpbmc6IDYwcHggMjVweDsNCg0KICAgIGgyIHsNCiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7DQogICAgICBmb250LXdlaWdodDogMzAwOw0KICAgICAgZm9udC1zaXplOiAzMnB4Ow0KICAgIH0NCg0KICAgIC5mb29kLWluZm8gew0KICAgICAgYm9yZGVyLXJhZGl1czogOHB4Ow0KICAgICAgYm94LXNoYWRvdzogMCA0cHggNnB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjEpLA0KICAgICAgICAwIDJweCA0cHggLTFweCByZ2JhKDAsIDAsIDAsIDAuMDYpOw0KICAgICAgcGFkZGluZzogMzJweDsNCiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7DQogICAgICBkaXNwbGF5OiBmbGV4Ow0KICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICAgIG1heC13aWR0aDogNjAwcHg7DQogICAgICBtYXJnaW46IDMycHggYXV0bzsNCg0KICAgICAgc3BhbiB7DQogICAgICAgIGZvbnQtc2l6ZTogMTRweDsNCiAgICAgIH0NCg0KICAgICAgLmlucHV0IHsNCiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgICAgIG1hcmdpbjogMTZweCAwOw0KDQogICAgICAgIGxhYmVsIHsNCiAgICAgICAgICBmb250LXNpemU6IDE0cHg7DQogICAgICAgICAgZGlzcGxheTogYmxvY2s7DQogICAgICAgICAgcGFkZGluZy1ib3R0b206IDZweDsNCiAgICAgICAgfQ0KICAgICAgICBpbnB1dCB7DQogICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgYm9yZGVyOiBub25lOw0KICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmY3ZjY7DQogICAgICAgICAgcGFkZGluZzogMTBweDsNCiAgICAgICAgICBoZWlnaHQ6IDUwcHg7DQogICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDkwMHB4KSB7DQogICAgICAgICAgfQ0KDQogICAgICAgICAgJjpmb2N1cyB7DQogICAgICAgICAgICBvdXRsaW5lOiBub25lOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICB0ZXh0YXJlYSB7DQogICAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgICAgICAgbWF4LXdpZHRoOiA1MzBweDsNCiAgICAgICAgICBoZWlnaHQ6IDkwcHg7DQogICAgICAgICAgYm9yZGVyOiBub25lOw0KICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmY3ZjY7DQogICAgICAgICAgcGFkZGluZzogOHB4Ow0KICAgICAgICAgIGhlaWdodDogMTUwcHg7DQogICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDkwMHB4KSB7DQogICAgICAgICAgfQ0KDQogICAgICAgICAgJjpmb2N1cyB7DQogICAgICAgICAgICBvdXRsaW5lOiBub25lOw0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICBidXR0b24gew0KICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7DQogICAgICB9DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["EditFood.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"EditFood.vue","sourceRoot":"src/views/food","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"food\">\r\n      <div class=\"container\">\r\n        <h2>\r\n          <i><b>Update Food</b></i>\r\n        </h2>\r\n        <div class=\"food-info\">\r\n          <div class=\"input\">\r\n            <div>\r\n              <label for=\"name\">Name:</label>\r\n              <input type=\"text\" id=\"name\" v-model=\"currentFood.name\" />\r\n            </div>\r\n            <div>\r\n              <label for=\"price\">Price:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"price\"\r\n                v-model.number=\"currentFood.price\"\r\n                required\r\n              />\r\n            </div>\r\n            <div>\r\n              <label for=\"description\">Description:</label>\r\n              <textarea\r\n                placeholder=\"Enter your description here\"\r\n                type=\"text\"\r\n                v-model=\"currentFood.description\"\r\n              />\r\n            </div>\r\n            <label\r\n              >File\r\n              <input\r\n                required\r\n                type=\"file\"\r\n                ref=\"file\"\r\n                @change=\"handleFileUpload()\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <span style=\"color: red\">{{ this.error }}</span>\r\n          <button @click=\"updateFood\" class=\"button\">Update</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport apiRequest from \"../../util/apiRequest\";\r\n// import axios from \"axios\";\r\n\r\nexport default {\r\n  async mounted() {\r\n    this.routeID = this.$route.params.foodid;\r\n    this.currentFood = await apiRequest.getFood(this.routeID);\r\n    //or\r\n    // await (await axios.get(\"http://localhost:3000/food/\"+this.$route.params.foodid)).data;\r\n  },\r\n  data() {\r\n    return {\r\n      currentFood: \"\",\r\n      routeID: \"\",\r\n      error: \"\",\r\n      file: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    handleFileUpload() {\r\n      this.currentFood.file = this.$refs.file.files.item(0);\r\n    },\r\n    async updateFood() {\r\n      if (this.currentFood.name !== \"\" && this.currentFood.price !== null) {\r\n        this.error = \"\";\r\n        let formData = new FormData();\r\n        formData.append(\"_id\", this.currentFood._id);\r\n        formData.append(\"name\", this.currentFood.name);\r\n        formData.append(\"price\", this.currentFood.price);\r\n        formData.append(\"description\", this.currentFood.description);\r\n        //if it has new choosen file\r\n        if (this.currentFood.file) {\r\n          formData.append(\"file\", this.currentFood.file);\r\n        }\r\n\r\n        const result = await apiRequest.updateFood(formData);\r\n\r\n        if (!result.message) {\r\n          this.$router.push({ name: \"Home\" });\r\n        } else {\r\n          this.error = result.message;\r\n          setTimeout(() => {\r\n            this.error = \"\";\r\n          }, 7000);\r\n        }\r\n      } else {\r\n        this.error = \"Please fill out all the fields!\";\r\n        return;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.food {\r\n  .container {\r\n    max-width: 1000px;\r\n    padding: 60px 25px;\r\n\r\n    h2 {\r\n      text-align: center;\r\n      margin-bottom: 16px;\r\n      font-weight: 300;\r\n      font-size: 32px;\r\n    }\r\n\r\n    .food-info {\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n        0 2px 4px -1px rgba(0, 0, 0, 0.06);\r\n      padding: 32px;\r\n      background-color: #f1f1f1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      max-width: 600px;\r\n      margin: 32px auto;\r\n\r\n      span {\r\n        font-size: 14px;\r\n      }\r\n\r\n      .input {\r\n        justify-content: center;\r\n        margin: 16px 0;\r\n\r\n        label {\r\n          font-size: 14px;\r\n          display: block;\r\n          padding-bottom: 6px;\r\n        }\r\n        input {\r\n          width: 100%;\r\n          border: none;\r\n          background-color: #f2f7f6;\r\n          padding: 10px;\r\n          height: 50px;\r\n          @media (min-width: 900px) {\r\n          }\r\n\r\n          &:focus {\r\n            outline: none;\r\n          }\r\n        }\r\n        textarea {\r\n          width: 100%;\r\n          max-width: 530px;\r\n          height: 90px;\r\n          border: none;\r\n          background-color: #f2f7f6;\r\n          padding: 8px;\r\n          height: 150px;\r\n          @media (min-width: 900px) {\r\n          }\r\n\r\n          &:focus {\r\n            outline: none;\r\n          }\r\n        }\r\n      }\r\n\r\n      button {\r\n        align-self: center;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}