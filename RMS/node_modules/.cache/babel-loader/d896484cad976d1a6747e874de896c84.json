{"remainingRequest":"C:\\Users\\PC\\Desktop\\RMS-main\\RMS\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\PC\\Desktop\\RMS-main\\RMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\PC\\Desktop\\RMS-main\\RMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\RMS-main\\RMS\\src\\views\\EditNews.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\RMS-main\\RMS\\src\\views\\EditNews.vue","mtime":1675873305191},{"path":"C:\\Users\\PC\\Desktop\\RMS-main\\RMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666293008000},{"path":"C:\\Users\\PC\\Desktop\\RMS-main\\RMS\\node_modules\\babel-loader\\lib\\index.js","mtime":1666293008000},{"path":"C:\\Users\\PC\\Desktop\\RMS-main\\RMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666293008000},{"path":"C:\\Users\\PC\\Desktop\\RMS-main\\RMS\\node_modules\\vue-loader\\lib\\index.js","mtime":1666293008000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["EditNews.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"create-post\">\n    <NewsCoverPreview v-show=\"this.$store.state.newsPhotoPreview\" />\n    <Loading v-show=\"loading\" />\n    <div class=\"container\">\n      <div :class=\"{ invisible: !error }\" class=\"err-message\">\n        <p><span>Error:</span>{{ this.errorMsg }}</p>\n      </div>\n      <div class=\"news-info\">\n        <input type=\"text\" placeholder=\"Enter News Title\" v-model=\"newsTitle\" />\n        <div class=\"upload-file\">\n          <label for=\"news-photo\">Upload Cover Photo</label>\n          <input type=\"file\" ref=\"newsPhoto\" id=\"news-photo\" @change=\"fileChange\" accept=\".png, .jpg, ,jpeg\" />\n          <button @click=\"openPreview\" class=\"preview\" :class=\"{ 'button-inactive': !this.$store.state.newsPhotoFileURL }\">\n            Preview Photo\n          </button>\n          <span>File Chosen: {{ this.$store.state.newsPhotoName }}</span>\n        </div>\n      </div>\n      <div class=\"editor\">\n        <vue-editor :editorOptions=\"editorSettings\" v-model=\"newsHTML\" useCustomImageHandler @image-added=\"imageHandler\" />\n      </div>\n      <div class=\"news-actions\">\n        <button @click=\"updateNews\">Save Changes</button>\n        <router-link class=\"router-button\" :to=\"{ name: 'NewsPreview' }\">Preview Changes</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NewsCoverPreview from \"../components/NewsCoverPreview\";\nimport Loading from \"../components/Loading\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport db from \"../firebase/firebaseInit\";\nimport Quill from \"quill\";\nwindow.Quill = Quill;\nconst ImageResize = require(\"quill-image-resize-module\").default;\nQuill.register(\"modules/imageResize\", ImageResize);\nexport default {\n  name: \"CreatePost\",\n  data() {\n    return {\n      file: null,\n      error: null,\n      errorMsg: null,\n      loading: null,\n      routeID: null,\n      currentNews: null,\n      editorSettings: {\n        modules: {\n          imageResize: {},\n        },\n      },\n    };\n  },\n  components: {\n    NewsCoverPreview,\n    Loading,\n  },\n  async mounted() {\n    this.routeID = this.$route.params.newsid;\n    this.currentNews = await this.$store.state.newsPosts.filter((post) => {\n      return post.newsID === this.routeID;\n    });\n    this.$store.commit(\"setNewsState\", this.currentNews[0]);\n  },\n  methods: {\n    fileChange() {\n      this.file = this.$refs.newsPhoto.files[0];\n      const fileName = this.file.name;\n      this.$store.commit(\"fileNameChange\", fileName);\n      this.$store.commit(\"createFileURL\", URL.createObjectURL(this.file));\n    },\n\n    openPreview() {\n      this.$store.commit(\"openPhotoPreview\");\n    },\n\n    imageHandler(file, Editor, cursorLocation, resetUploader) {\n      const storageRef = firebase.storage().ref();\n      const docRef = storageRef.child(`documents/newsPostPhotos/${file.name}`);\n      docRef.put(file).on(\n        \"state_changed\",\n        (snapshot) => {\n          console.log(snapshot);\n        },\n        (err) => {\n          console.log(err);\n        },\n        async () => {\n          const downloadURL = await docRef.getDownloadURL();\n          Editor.insertEmbed(cursorLocation, \"image\", downloadURL);\n          resetUploader();\n        }\n      );\n    },\n\n    async updateNews() {\n      const dataBase = await db.collection(\"newsPosts\").doc(this.routeID);\n      if (this.newsTitle.length !== 0 && this.newsHTML.length !== 0) {\n        if (this.file) {\n          this.loading = true;\n          const storageRef = firebase.storage().ref();\n          const docRef = storageRef.child(`documents/newsCoverPhotos/${this.$store.state.newsPhotoName}`);\n          docRef.put(this.file).on(\n            \"state_changed\",\n            (snapshot) => {\n              console.log(snapshot);\n            },\n            (err) => {\n              console.log(err);\n              this.loading = false;\n            },\n            async () => {\n              const downloadURL = await docRef.getDownloadURL();\n\n              await dataBase.update({\n                newsHTML: this.newsHTML,\n                newsCoverPhoto: downloadURL,\n                newsCoverPhotoName: this.newsCoverPhotoName,\n                newsTitle: this.newsTitle,\n              });\n              await this.$store.dispatch(\"updatePost\", this.routeID);\n              this.loading = false;\n              this.$router.push({ name: \"ViewNews\", params: { newsid: dataBase.id } });\n            }\n          );\n          return;\n        }\n        this.loading = true;\n        //if this.file==false means that the image hasn't changed so we update only title and desciption\n        await dataBase.update({\n          newsHTML: this.newsHTML,\n          newsTitle: this.newsTitle,\n        });\n        await this.$store.dispatch(\"updatePost\", this.routeID);\n        this.loading = false;\n        this.$router.push({ name: \"ViewNews\", params: { newsid: dataBase.id } });\n        return;\n      }\n      this.error = true;\n      this.errorMsg = \"Please ensure News Title & News Post has been filled!\";\n      setTimeout(() => {\n        this.error = false;\n      }, 5000);\n      return;\n    },\n  },\n  computed: {\n    profileId() {\n      return this.$store.state.profileId;\n    },\n    newsCoverPhotoName() {\n      return this.$store.state.newsPhotoName;\n    },\n    newsTitle: {\n      get() {\n        return this.$store.state.newsTitle;\n      },\n      set(payload) {\n        this.$store.commit(\"updatenewsTitle\", payload);\n      },\n    },\n    newsHTML: {\n      get() {\n        return this.$store.state.newsHTML;\n      },\n      set(payload) {\n        this.$store.commit(\"newNewsPost\", payload);\n      },\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.create-post {\n  position: relative;\n  height: 100%;\n\n  button {\n    margin-top: 0;\n  }\n\n  .router-button {\n    text-decoration: none;\n    color: #fff;\n  }\n\n  label,\n  button,\n  .router-button {\n    transition: 0.5s ease-in-out all;\n    align-self: center;\n    font-size: 14px;\n    cursor: pointer;\n    border-radius: 20px;\n    padding: 12px 24px;\n    color: #fff;\n    background-color: #303030;\n    text-decoration: none;\n\n    &:hover {\n      background-color: rgba(48, 48, 48, 0.7);\n    }\n  }\n\n  .container {\n    position: relative;\n    height: 100%;\n    padding: 10px 25px 60px;\n  }\n\n  // error styling\n  .invisible {\n    opacity: 0 !important;\n  }\n\n  .err-message {\n    width: 100%;\n    padding: 12px;\n    border-radius: 8px;\n    color: #fff;\n    margin-bottom: 10px;\n    background-color: #303030;\n    opacity: 1;\n    transition: 0.5s ease all;\n\n    p {\n      font-size: 14px;\n    }\n\n    span {\n      font-weight: 600;\n    }\n  }\n\n  .news-info {\n    display: flex;\n    margin-bottom: 32px;\n\n    input:nth-child(1) {\n      min-width: 300px;\n    }\n\n    input {\n      transition: 0.5s ease-in-out all;\n      padding: 10px 4px;\n      border: none;\n      border-bottom: 1px solid #303030;\n\n      &:focus {\n        outline: none;\n        box-shadow: 0 1px 0 0 #303030;\n      }\n    }\n\n    .upload-file {\n      flex: 1;\n      margin-left: 16px;\n      position: relative;\n      display: flex;\n\n      input {\n        display: none;\n      }\n\n      .preview {\n        margin-left: 16px;\n        text-transform: initial;\n      }\n\n      span {\n        font-size: 12px;\n        margin-left: 16px;\n        align-self: center;\n      }\n    }\n  }\n\n  .editor {\n    height: 60vh;\n    display: flex;\n    flex-direction: column;\n\n    .quillWrapper {\n      position: relative;\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n    }\n\n    .ql-container {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      overflow: scroll;\n    }\n\n    .ql-editor {\n      padding: 20px 16px 30px;\n    }\n  }\n\n  .news-actions {\n    margin-top: 32px;\n\n    button {\n      margin-right: 16px;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views"}]}