{"remainingRequest":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\src\\views\\EditNews.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\src\\views\\EditNews.vue","mtime":1647724259943},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647724242346},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\babel-loader\\lib\\index.js","mtime":1647724241991},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647724242346},{"path":"C:\\Users\\jimmy\\OneDrive\\Desktop\\RMS\\RMS\\node_modules\\vue-loader\\lib\\index.js","mtime":1647724258599}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["EditNews.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"create-post\">\r\n    <NewsCoverPreview v-show=\"this.$store.state.newsPhotoPreview\" />\r\n    <Loading v-show=\"loading\" />\r\n    <div class=\"container\">\r\n      <div :class=\"{ invisible: !error }\" class=\"err-message\">\r\n        <p><span>Error:</span>{{ this.errorMsg }}</p>\r\n      </div>\r\n      <div class=\"news-info\">\r\n        <input type=\"text\" placeholder=\"Enter News Title\" v-model=\"newsTitle\" />\r\n        <div class=\"upload-file\">\r\n          <label for=\"news-photo\">Upload Cover Photo</label>\r\n          <input type=\"file\" ref=\"newsPhoto\" id=\"news-photo\" @change=\"fileChange\" accept=\".png, .jpg, ,jpeg\" />\r\n          <button @click=\"openPreview\" class=\"preview\" :class=\"{ 'button-inactive': !this.$store.state.newsPhotoFileURL }\">\r\n            Preview Photo\r\n          </button>\r\n          <span>File Chosen: {{ this.$store.state.newsPhotoName }}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"editor\">\r\n        <vue-editor :editorOptions=\"editorSettings\" v-model=\"newsHTML\" useCustomImageHandler @image-added=\"imageHandler\" />\r\n      </div>\r\n      <div class=\"news-actions\">\r\n        <button @click=\"updateNews\">Save Changes</button>\r\n        <router-link class=\"router-button\" :to=\"{ name: 'NewsPreview' }\">Preview Changes</router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NewsCoverPreview from \"../components/NewsCoverPreview\";\r\nimport Loading from \"../components/Loading\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/storage\";\r\nimport db from \"../firebase/firebaseInit\";\r\nimport Quill from \"quill\";\r\nwindow.Quill = Quill;\r\nconst ImageResize = require(\"quill-image-resize-module\").default;\r\nQuill.register(\"modules/imageResize\", ImageResize);\r\nexport default {\r\n  name: \"CreatePost\",\r\n  data() {\r\n    return {\r\n      file: null,\r\n      error: null,\r\n      errorMsg: null,\r\n      loading: null,\r\n      routeID: null,\r\n      currentNews: null,\r\n      editorSettings: {\r\n        modules: {\r\n          imageResize: {},\r\n        },\r\n      },\r\n    };\r\n  },\r\n  components: {\r\n    NewsCoverPreview,\r\n    Loading,\r\n  },\r\n  async mounted() {\r\n    this.routeID = this.$route.params.newsid;\r\n    this.currentNews = await this.$store.state.newsPosts.filter((post) => {\r\n      return post.newsID === this.routeID;\r\n    });\r\n    this.$store.commit(\"setNewsState\", this.currentNews[0]);\r\n  },\r\n  methods: {\r\n    fileChange() {\r\n      this.file = this.$refs.newsPhoto.files[0];\r\n      const fileName = this.file.name;\r\n      this.$store.commit(\"fileNameChange\", fileName);\r\n      this.$store.commit(\"createFileURL\", URL.createObjectURL(this.file));\r\n    },\r\n\r\n    openPreview() {\r\n      this.$store.commit(\"openPhotoPreview\");\r\n    },\r\n\r\n    imageHandler(file, Editor, cursorLocation, resetUploader) {\r\n      const storageRef = firebase.storage().ref();\r\n      const docRef = storageRef.child(`documents/newsPostPhotos/${file.name}`);\r\n      docRef.put(file).on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          console.log(snapshot);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        },\r\n        async () => {\r\n          const downloadURL = await docRef.getDownloadURL();\r\n          Editor.insertEmbed(cursorLocation, \"image\", downloadURL);\r\n          resetUploader();\r\n        }\r\n      );\r\n    },\r\n\r\n    async updateNews() {\r\n      const dataBase = await db.collection(\"newsPosts\").doc(this.routeID);\r\n      if (this.newsTitle.length !== 0 && this.newsHTML.length !== 0) {\r\n        if (this.file) {\r\n          this.loading = true;\r\n          const storageRef = firebase.storage().ref();\r\n          const docRef = storageRef.child(`documents/newsCoverPhotos/${this.$store.state.newsPhotoName}`);\r\n          docRef.put(this.file).on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              console.log(snapshot);\r\n            },\r\n            (err) => {\r\n              console.log(err);\r\n              this.loading = false;\r\n            },\r\n            async () => {\r\n              const downloadURL = await docRef.getDownloadURL();\r\n\r\n              await dataBase.update({\r\n                newsHTML: this.newsHTML,\r\n                newsCoverPhoto: downloadURL,\r\n                newsCoverPhotoName: this.newsCoverPhotoName,\r\n                newsTitle: this.newsTitle,\r\n              });\r\n              await this.$store.dispatch(\"updatePost\", this.routeID);\r\n              this.loading = false;\r\n              this.$router.push({ name: \"ViewNews\", params: { newsid: dataBase.id } });\r\n            }\r\n          );\r\n          return;\r\n        }\r\n        this.loading = true;\r\n        //if this.file==false means that the image hasn't changed so we update only title and desciption\r\n        await dataBase.update({\r\n          newsHTML: this.newsHTML,\r\n          newsTitle: this.newsTitle,\r\n        });\r\n        await this.$store.dispatch(\"updatePost\", this.routeID);\r\n        this.loading = false;\r\n        this.$router.push({ name: \"ViewNews\", params: { newsid: dataBase.id } });\r\n        return;\r\n      }\r\n      this.error = true;\r\n      this.errorMsg = \"Please ensure News Title & News Post has been filled!\";\r\n      setTimeout(() => {\r\n        this.error = false;\r\n      }, 5000);\r\n      return;\r\n    },\r\n  },\r\n  computed: {\r\n    profileId() {\r\n      return this.$store.state.profileId;\r\n    },\r\n    newsCoverPhotoName() {\r\n      return this.$store.state.newsPhotoName;\r\n    },\r\n    newsTitle: {\r\n      get() {\r\n        return this.$store.state.newsTitle;\r\n      },\r\n      set(payload) {\r\n        this.$store.commit(\"updatenewsTitle\", payload);\r\n      },\r\n    },\r\n    newsHTML: {\r\n      get() {\r\n        return this.$store.state.newsHTML;\r\n      },\r\n      set(payload) {\r\n        this.$store.commit(\"newNewsPost\", payload);\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.create-post {\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  button {\r\n    margin-top: 0;\r\n  }\r\n\r\n  .router-button {\r\n    text-decoration: none;\r\n    color: #fff;\r\n  }\r\n\r\n  label,\r\n  button,\r\n  .router-button {\r\n    transition: 0.5s ease-in-out all;\r\n    align-self: center;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    padding: 12px 24px;\r\n    color: #fff;\r\n    background-color: #303030;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      background-color: rgba(48, 48, 48, 0.7);\r\n    }\r\n  }\r\n\r\n  .container {\r\n    position: relative;\r\n    height: 100%;\r\n    padding: 10px 25px 60px;\r\n  }\r\n\r\n  // error styling\r\n  .invisible {\r\n    opacity: 0 !important;\r\n  }\r\n\r\n  .err-message {\r\n    width: 100%;\r\n    padding: 12px;\r\n    border-radius: 8px;\r\n    color: #fff;\r\n    margin-bottom: 10px;\r\n    background-color: #303030;\r\n    opacity: 1;\r\n    transition: 0.5s ease all;\r\n\r\n    p {\r\n      font-size: 14px;\r\n    }\r\n\r\n    span {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .news-info {\r\n    display: flex;\r\n    margin-bottom: 32px;\r\n\r\n    input:nth-child(1) {\r\n      min-width: 300px;\r\n    }\r\n\r\n    input {\r\n      transition: 0.5s ease-in-out all;\r\n      padding: 10px 4px;\r\n      border: none;\r\n      border-bottom: 1px solid #303030;\r\n\r\n      &:focus {\r\n        outline: none;\r\n        box-shadow: 0 1px 0 0 #303030;\r\n      }\r\n    }\r\n\r\n    .upload-file {\r\n      flex: 1;\r\n      margin-left: 16px;\r\n      position: relative;\r\n      display: flex;\r\n\r\n      input {\r\n        display: none;\r\n      }\r\n\r\n      .preview {\r\n        margin-left: 16px;\r\n        text-transform: initial;\r\n      }\r\n\r\n      span {\r\n        font-size: 12px;\r\n        margin-left: 16px;\r\n        align-self: center;\r\n      }\r\n    }\r\n  }\r\n\r\n  .editor {\r\n    height: 60vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .quillWrapper {\r\n      position: relative;\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 100%;\r\n    }\r\n\r\n    .ql-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      height: 100%;\r\n      overflow: scroll;\r\n    }\r\n\r\n    .ql-editor {\r\n      padding: 20px 16px 30px;\r\n    }\r\n  }\r\n\r\n  .news-actions {\r\n    margin-top: 32px;\r\n\r\n    button {\r\n      margin-right: 16px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}