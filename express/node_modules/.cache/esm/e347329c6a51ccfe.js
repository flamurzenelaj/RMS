let express,usersRoute,getAuthToken,cors,helmet,adminRoute,foodRoute,mongoose;_6a5‍.w("express",[["default",["express"],function(v){express=v}]]);_6a5‍.w("./api/routes/usersRoute",[["default",["usersRoute"],function(v){usersRoute=v}]]);_6a5‍.w("./api/middlewares/getAuthToken",[["default",["getAuthToken"],function(v){getAuthToken=v}]]);_6a5‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_6a5‍.w("helmet",[["default",["helmet"],function(v){helmet=v}]]);_6a5‍.w("./api/routes/adminRoute",[["default",["adminRoute"],function(v){adminRoute=v}]]);_6a5‍.w("./api/routes/foodRoute",[["default",["foodRoute"],function(v){foodRoute=v}]]);_6a5‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);








mongoose.connect('mongodb://localhost:27017/RMS').then(() => {
    console.log('Connected to MongoDB on port 27017')

    const app = express();
    const port = process.env.PORT || 3000;

    app.use(cors());
    app.use(helmet());

    app.use(express.urlencoded({
        extended: true
    }))
    app.use(express.json());

    app.use(getAuthToken);

    app.use("/users", usersRoute);

    app.use("/adminRoute", adminRoute);

    app.use("/food", foodRoute);


    app.listen(port, () => {
        _6a5‍.g.console.log('api_app is listening on port ' + port);
    });
})